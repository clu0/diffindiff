% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oracle_learner.R
\name{oracle_learner}
\alias{oracle_learner}
\title{oracle methods}
\usage{
oracle_learner(X, Y, Ti, Si, f, h, b, TAU, tau = NULL, gamma = NULL,
  P_T1_S1, P_T1_S0, P_T0_S1, P_T0_S0, constant_eff = c("constant",
  "non_constant"), lambda_choice = "lambda.min")
}
\arguments{
\item{X}{input features}

\item{Y}{observed responses}

\item{Ti}{time variable}

\item{Si}{state variable}

\item{f}{the effect of Ti on outcome:
f(x) = E[Yi | Xi = x, Ti = 1, Si = 0] - E[Yi | Xi = x, Ti = 0, Si = 0]}

\item{h}{the effect of Si on outcome:
h(x) = E[Yi | Xi = x, Ti = 0, Si = 1] - E[Yi | Xi = x, Ti = 0, Si = 0]}

\item{b}{the baseline effect of input features: b(x) = E[Yi | Xi = 1, Ti = 0, Si = 0]}

\item{TAU}{the true ATE}

\item{tau}{the heterogeneous treatment effect, given as a vector with the same
length as Y; left as NULL if we assume the treatment is non-constant}

\item{gamma}{optional balancing weights}

\item{constant_eff}{whether we assume a constant or non-constant treatment effect}

\item{lambda_choice}{how to choose the lasso estimate from glmnet;
choose from "lambda.min" and "lambda.1se"; default "lambda.min"}

\item{P_Ta_Sb}{the conditional probabilities:
P_Ta_Sb(x) = P(Ti = a, Si = b | Xi = x), where a and b take values in 0 and 1}
}
\value{
estimated ATE
}
\description{
function that takes in oracle values for all nuisance parameters,
and estimates the ATE, either using the transformed regression (TR), if we assume a constant effect, or using
non-parametric regression (DiD-AMLE), if we assume a non-constant effect (details see Lu, Nie, Wager (2019))
}
